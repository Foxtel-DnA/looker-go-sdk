// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ContentValidationLookMLDashboardElement content validation look m l dashboard element
//
// swagger:model ContentValidationLookMLDashboardElement
type ContentValidationLookMLDashboardElement struct {

	// Link ID of the LookML Dashboard Element
	// Read Only: true
	LookmlLinkID string `json:"lookml_link_id,omitempty"`

	// Title of the LookML Dashboard Element
	// Read Only: true
	Title string `json:"title,omitempty"`
}

// Validate validates this content validation look m l dashboard element
func (m *ContentValidationLookMLDashboardElement) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this content validation look m l dashboard element based on the context it is used
func (m *ContentValidationLookMLDashboardElement) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateLookmlLinkID(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateTitle(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ContentValidationLookMLDashboardElement) contextValidateLookmlLinkID(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "lookml_link_id", "body", string(m.LookmlLinkID)); err != nil {
		return err
	}

	return nil
}

func (m *ContentValidationLookMLDashboardElement) contextValidateTitle(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "title", "body", string(m.Title)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ContentValidationLookMLDashboardElement) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ContentValidationLookMLDashboardElement) UnmarshalBinary(b []byte) error {
	var res ContentValidationLookMLDashboardElement
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
