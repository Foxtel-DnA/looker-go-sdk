// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// LookmlModelExploreSupportedMeasureType lookml model explore supported measure type
//
// swagger:model LookmlModelExploreSupportedMeasureType
type LookmlModelExploreSupportedMeasureType struct {

	// dimension type
	// Read Only: true
	DimensionType string `json:"dimension_type,omitempty"`

	// measure types
	// Read Only: true
	MeasureTypes []string `json:"measure_types"`
}

// Validate validates this lookml model explore supported measure type
func (m *LookmlModelExploreSupportedMeasureType) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this lookml model explore supported measure type based on the context it is used
func (m *LookmlModelExploreSupportedMeasureType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateDimensionType(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateMeasureTypes(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LookmlModelExploreSupportedMeasureType) contextValidateDimensionType(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "dimension_type", "body", string(m.DimensionType)); err != nil {
		return err
	}

	return nil
}

func (m *LookmlModelExploreSupportedMeasureType) contextValidateMeasureTypes(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "measure_types", "body", []string(m.MeasureTypes)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *LookmlModelExploreSupportedMeasureType) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LookmlModelExploreSupportedMeasureType) UnmarshalBinary(b []byte) error {
	var res LookmlModelExploreSupportedMeasureType
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
