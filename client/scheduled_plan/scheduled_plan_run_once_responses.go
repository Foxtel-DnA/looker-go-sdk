// Code generated by go-swagger; DO NOT EDIT.

package scheduled_plan

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/billtrust/looker-go-sdk/models"
)

// ScheduledPlanRunOnceReader is a Reader for the ScheduledPlanRunOnce structure.
type ScheduledPlanRunOnceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ScheduledPlanRunOnceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewScheduledPlanRunOnceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewScheduledPlanRunOnceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewScheduledPlanRunOnceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewScheduledPlanRunOnceConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewScheduledPlanRunOnceUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewScheduledPlanRunOnceTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewScheduledPlanRunOnceOK creates a ScheduledPlanRunOnceOK with default headers values
func NewScheduledPlanRunOnceOK() *ScheduledPlanRunOnceOK {
	return &ScheduledPlanRunOnceOK{}
}

/* ScheduledPlanRunOnceOK describes a response with status code 200, with default header values.

Scheduled Plan
*/
type ScheduledPlanRunOnceOK struct {
	Payload *models.ScheduledPlan
}

func (o *ScheduledPlanRunOnceOK) Error() string {
	return fmt.Sprintf("[POST /scheduled_plans/run_once][%d] scheduledPlanRunOnceOK  %+v", 200, o.Payload)
}
func (o *ScheduledPlanRunOnceOK) GetPayload() *models.ScheduledPlan {
	return o.Payload
}

func (o *ScheduledPlanRunOnceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ScheduledPlan)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewScheduledPlanRunOnceBadRequest creates a ScheduledPlanRunOnceBadRequest with default headers values
func NewScheduledPlanRunOnceBadRequest() *ScheduledPlanRunOnceBadRequest {
	return &ScheduledPlanRunOnceBadRequest{}
}

/* ScheduledPlanRunOnceBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ScheduledPlanRunOnceBadRequest struct {
	Payload *models.Error
}

func (o *ScheduledPlanRunOnceBadRequest) Error() string {
	return fmt.Sprintf("[POST /scheduled_plans/run_once][%d] scheduledPlanRunOnceBadRequest  %+v", 400, o.Payload)
}
func (o *ScheduledPlanRunOnceBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ScheduledPlanRunOnceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewScheduledPlanRunOnceNotFound creates a ScheduledPlanRunOnceNotFound with default headers values
func NewScheduledPlanRunOnceNotFound() *ScheduledPlanRunOnceNotFound {
	return &ScheduledPlanRunOnceNotFound{}
}

/* ScheduledPlanRunOnceNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ScheduledPlanRunOnceNotFound struct {
	Payload *models.Error
}

func (o *ScheduledPlanRunOnceNotFound) Error() string {
	return fmt.Sprintf("[POST /scheduled_plans/run_once][%d] scheduledPlanRunOnceNotFound  %+v", 404, o.Payload)
}
func (o *ScheduledPlanRunOnceNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ScheduledPlanRunOnceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewScheduledPlanRunOnceConflict creates a ScheduledPlanRunOnceConflict with default headers values
func NewScheduledPlanRunOnceConflict() *ScheduledPlanRunOnceConflict {
	return &ScheduledPlanRunOnceConflict{}
}

/* ScheduledPlanRunOnceConflict describes a response with status code 409, with default header values.

Resource Already Exists
*/
type ScheduledPlanRunOnceConflict struct {
	Payload *models.Error
}

func (o *ScheduledPlanRunOnceConflict) Error() string {
	return fmt.Sprintf("[POST /scheduled_plans/run_once][%d] scheduledPlanRunOnceConflict  %+v", 409, o.Payload)
}
func (o *ScheduledPlanRunOnceConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *ScheduledPlanRunOnceConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewScheduledPlanRunOnceUnprocessableEntity creates a ScheduledPlanRunOnceUnprocessableEntity with default headers values
func NewScheduledPlanRunOnceUnprocessableEntity() *ScheduledPlanRunOnceUnprocessableEntity {
	return &ScheduledPlanRunOnceUnprocessableEntity{}
}

/* ScheduledPlanRunOnceUnprocessableEntity describes a response with status code 422, with default header values.

Validation Error
*/
type ScheduledPlanRunOnceUnprocessableEntity struct {
	Payload *models.ValidationError
}

func (o *ScheduledPlanRunOnceUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /scheduled_plans/run_once][%d] scheduledPlanRunOnceUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *ScheduledPlanRunOnceUnprocessableEntity) GetPayload() *models.ValidationError {
	return o.Payload
}

func (o *ScheduledPlanRunOnceUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewScheduledPlanRunOnceTooManyRequests creates a ScheduledPlanRunOnceTooManyRequests with default headers values
func NewScheduledPlanRunOnceTooManyRequests() *ScheduledPlanRunOnceTooManyRequests {
	return &ScheduledPlanRunOnceTooManyRequests{}
}

/* ScheduledPlanRunOnceTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type ScheduledPlanRunOnceTooManyRequests struct {
	Payload *models.Error
}

func (o *ScheduledPlanRunOnceTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /scheduled_plans/run_once][%d] scheduledPlanRunOnceTooManyRequests  %+v", 429, o.Payload)
}
func (o *ScheduledPlanRunOnceTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *ScheduledPlanRunOnceTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
