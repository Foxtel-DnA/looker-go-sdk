// Code generated by go-swagger; DO NOT EDIT.

package user_attribute

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"your-damain.com/swagger/looker-api-golang/models"
)

// NewUpdateUserAttributeParams creates a new UpdateUserAttributeParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateUserAttributeParams() *UpdateUserAttributeParams {
	return &UpdateUserAttributeParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateUserAttributeParamsWithTimeout creates a new UpdateUserAttributeParams object
// with the ability to set a timeout on a request.
func NewUpdateUserAttributeParamsWithTimeout(timeout time.Duration) *UpdateUserAttributeParams {
	return &UpdateUserAttributeParams{
		timeout: timeout,
	}
}

// NewUpdateUserAttributeParamsWithContext creates a new UpdateUserAttributeParams object
// with the ability to set a context for a request.
func NewUpdateUserAttributeParamsWithContext(ctx context.Context) *UpdateUserAttributeParams {
	return &UpdateUserAttributeParams{
		Context: ctx,
	}
}

// NewUpdateUserAttributeParamsWithHTTPClient creates a new UpdateUserAttributeParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateUserAttributeParamsWithHTTPClient(client *http.Client) *UpdateUserAttributeParams {
	return &UpdateUserAttributeParams{
		HTTPClient: client,
	}
}

/* UpdateUserAttributeParams contains all the parameters to send to the API endpoint
   for the update user attribute operation.

   Typically these are written to a http.Request.
*/
type UpdateUserAttributeParams struct {

	/* Body.

	   User Attribute
	*/
	Body *models.UserAttribute

	/* Fields.

	   Requested fields.
	*/
	Fields *string

	/* UserAttributeID.

	   Id of user attribute

	   Format: int64
	*/
	UserAttributeID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update user attribute params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateUserAttributeParams) WithDefaults() *UpdateUserAttributeParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update user attribute params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateUserAttributeParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update user attribute params
func (o *UpdateUserAttributeParams) WithTimeout(timeout time.Duration) *UpdateUserAttributeParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update user attribute params
func (o *UpdateUserAttributeParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update user attribute params
func (o *UpdateUserAttributeParams) WithContext(ctx context.Context) *UpdateUserAttributeParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update user attribute params
func (o *UpdateUserAttributeParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update user attribute params
func (o *UpdateUserAttributeParams) WithHTTPClient(client *http.Client) *UpdateUserAttributeParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update user attribute params
func (o *UpdateUserAttributeParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the update user attribute params
func (o *UpdateUserAttributeParams) WithBody(body *models.UserAttribute) *UpdateUserAttributeParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the update user attribute params
func (o *UpdateUserAttributeParams) SetBody(body *models.UserAttribute) {
	o.Body = body
}

// WithFields adds the fields to the update user attribute params
func (o *UpdateUserAttributeParams) WithFields(fields *string) *UpdateUserAttributeParams {
	o.SetFields(fields)
	return o
}

// SetFields adds the fields to the update user attribute params
func (o *UpdateUserAttributeParams) SetFields(fields *string) {
	o.Fields = fields
}

// WithUserAttributeID adds the userAttributeID to the update user attribute params
func (o *UpdateUserAttributeParams) WithUserAttributeID(userAttributeID int64) *UpdateUserAttributeParams {
	o.SetUserAttributeID(userAttributeID)
	return o
}

// SetUserAttributeID adds the userAttributeId to the update user attribute params
func (o *UpdateUserAttributeParams) SetUserAttributeID(userAttributeID int64) {
	o.UserAttributeID = userAttributeID
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateUserAttributeParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	if o.Fields != nil {

		// query param fields
		var qrFields string

		if o.Fields != nil {
			qrFields = *o.Fields
		}
		qFields := qrFields
		if qFields != "" {

			if err := r.SetQueryParam("fields", qFields); err != nil {
				return err
			}
		}
	}

	// path param user_attribute_id
	if err := r.SetPathParam("user_attribute_id", swag.FormatInt64(o.UserAttributeID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
