// Code generated by go-swagger; DO NOT EDIT.

package user_attribute

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/Foxtel-DnA/looker-go-sdk/models"
)

// NewSetUserAttributeGroupValuesParams creates a new SetUserAttributeGroupValuesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewSetUserAttributeGroupValuesParams() *SetUserAttributeGroupValuesParams {
	return &SetUserAttributeGroupValuesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewSetUserAttributeGroupValuesParamsWithTimeout creates a new SetUserAttributeGroupValuesParams object
// with the ability to set a timeout on a request.
func NewSetUserAttributeGroupValuesParamsWithTimeout(timeout time.Duration) *SetUserAttributeGroupValuesParams {
	return &SetUserAttributeGroupValuesParams{
		timeout: timeout,
	}
}

// NewSetUserAttributeGroupValuesParamsWithContext creates a new SetUserAttributeGroupValuesParams object
// with the ability to set a context for a request.
func NewSetUserAttributeGroupValuesParamsWithContext(ctx context.Context) *SetUserAttributeGroupValuesParams {
	return &SetUserAttributeGroupValuesParams{
		Context: ctx,
	}
}

// NewSetUserAttributeGroupValuesParamsWithHTTPClient creates a new SetUserAttributeGroupValuesParams object
// with the ability to set a custom HTTPClient for a request.
func NewSetUserAttributeGroupValuesParamsWithHTTPClient(client *http.Client) *SetUserAttributeGroupValuesParams {
	return &SetUserAttributeGroupValuesParams{
		HTTPClient: client,
	}
}

/* SetUserAttributeGroupValuesParams contains all the parameters to send to the API endpoint
   for the set user attribute group values operation.

   Typically these are written to a http.Request.
*/
type SetUserAttributeGroupValuesParams struct {

	/* Body.

	   Array of group values.
	*/
	Body []*models.UserAttributeGroupValue

	/* UserAttributeID.

	   Id of user attribute

	   Format: int64
	*/
	UserAttributeID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the set user attribute group values params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SetUserAttributeGroupValuesParams) WithDefaults() *SetUserAttributeGroupValuesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the set user attribute group values params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SetUserAttributeGroupValuesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the set user attribute group values params
func (o *SetUserAttributeGroupValuesParams) WithTimeout(timeout time.Duration) *SetUserAttributeGroupValuesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the set user attribute group values params
func (o *SetUserAttributeGroupValuesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the set user attribute group values params
func (o *SetUserAttributeGroupValuesParams) WithContext(ctx context.Context) *SetUserAttributeGroupValuesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the set user attribute group values params
func (o *SetUserAttributeGroupValuesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the set user attribute group values params
func (o *SetUserAttributeGroupValuesParams) WithHTTPClient(client *http.Client) *SetUserAttributeGroupValuesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the set user attribute group values params
func (o *SetUserAttributeGroupValuesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the set user attribute group values params
func (o *SetUserAttributeGroupValuesParams) WithBody(body []*models.UserAttributeGroupValue) *SetUserAttributeGroupValuesParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the set user attribute group values params
func (o *SetUserAttributeGroupValuesParams) SetBody(body []*models.UserAttributeGroupValue) {
	o.Body = body
}

// WithUserAttributeID adds the userAttributeID to the set user attribute group values params
func (o *SetUserAttributeGroupValuesParams) WithUserAttributeID(userAttributeID int64) *SetUserAttributeGroupValuesParams {
	o.SetUserAttributeID(userAttributeID)
	return o
}

// SetUserAttributeID adds the userAttributeId to the set user attribute group values params
func (o *SetUserAttributeGroupValuesParams) SetUserAttributeID(userAttributeID int64) {
	o.UserAttributeID = userAttributeID
}

// WriteToRequest writes these params to a swagger request
func (o *SetUserAttributeGroupValuesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param user_attribute_id
	if err := r.SetPathParam("user_attribute_id", swag.FormatInt64(o.UserAttributeID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
