// Code generated by go-swagger; DO NOT EDIT.

package role

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/billtrust/looker-go-sdk/models"
)

// UpdateRoleReader is a Reader for the UpdateRole structure.
type UpdateRoleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateRoleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateRoleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateRoleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateRoleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewUpdateRoleMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateRoleUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewUpdateRoleTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateRoleOK creates a UpdateRoleOK with default headers values
func NewUpdateRoleOK() *UpdateRoleOK {
	return &UpdateRoleOK{}
}

/* UpdateRoleOK describes a response with status code 200, with default header values.

Role
*/
type UpdateRoleOK struct {
	Payload *models.Role
}

func (o *UpdateRoleOK) Error() string {
	return fmt.Sprintf("[PATCH /roles/{role_id}][%d] updateRoleOK  %+v", 200, o.Payload)
}
func (o *UpdateRoleOK) GetPayload() *models.Role {
	return o.Payload
}

func (o *UpdateRoleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Role)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateRoleBadRequest creates a UpdateRoleBadRequest with default headers values
func NewUpdateRoleBadRequest() *UpdateRoleBadRequest {
	return &UpdateRoleBadRequest{}
}

/* UpdateRoleBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateRoleBadRequest struct {
	Payload *models.Error
}

func (o *UpdateRoleBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /roles/{role_id}][%d] updateRoleBadRequest  %+v", 400, o.Payload)
}
func (o *UpdateRoleBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateRoleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateRoleNotFound creates a UpdateRoleNotFound with default headers values
func NewUpdateRoleNotFound() *UpdateRoleNotFound {
	return &UpdateRoleNotFound{}
}

/* UpdateRoleNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateRoleNotFound struct {
	Payload *models.Error
}

func (o *UpdateRoleNotFound) Error() string {
	return fmt.Sprintf("[PATCH /roles/{role_id}][%d] updateRoleNotFound  %+v", 404, o.Payload)
}
func (o *UpdateRoleNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateRoleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateRoleMethodNotAllowed creates a UpdateRoleMethodNotAllowed with default headers values
func NewUpdateRoleMethodNotAllowed() *UpdateRoleMethodNotAllowed {
	return &UpdateRoleMethodNotAllowed{}
}

/* UpdateRoleMethodNotAllowed describes a response with status code 405, with default header values.

Resource Can't Be Modified
*/
type UpdateRoleMethodNotAllowed struct {
	Payload *models.Error
}

func (o *UpdateRoleMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PATCH /roles/{role_id}][%d] updateRoleMethodNotAllowed  %+v", 405, o.Payload)
}
func (o *UpdateRoleMethodNotAllowed) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateRoleMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateRoleUnprocessableEntity creates a UpdateRoleUnprocessableEntity with default headers values
func NewUpdateRoleUnprocessableEntity() *UpdateRoleUnprocessableEntity {
	return &UpdateRoleUnprocessableEntity{}
}

/* UpdateRoleUnprocessableEntity describes a response with status code 422, with default header values.

Validation Error
*/
type UpdateRoleUnprocessableEntity struct {
	Payload *models.ValidationError
}

func (o *UpdateRoleUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PATCH /roles/{role_id}][%d] updateRoleUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *UpdateRoleUnprocessableEntity) GetPayload() *models.ValidationError {
	return o.Payload
}

func (o *UpdateRoleUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateRoleTooManyRequests creates a UpdateRoleTooManyRequests with default headers values
func NewUpdateRoleTooManyRequests() *UpdateRoleTooManyRequests {
	return &UpdateRoleTooManyRequests{}
}

/* UpdateRoleTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type UpdateRoleTooManyRequests struct {
	Payload *models.Error
}

func (o *UpdateRoleTooManyRequests) Error() string {
	return fmt.Sprintf("[PATCH /roles/{role_id}][%d] updateRoleTooManyRequests  %+v", 429, o.Payload)
}
func (o *UpdateRoleTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateRoleTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
