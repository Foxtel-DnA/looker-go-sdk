// Code generated by go-swagger; DO NOT EDIT.

package role

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"your-damain.com/swagger/looker-api-golang/models"
)

// RoleReader is a Reader for the Role structure.
type RoleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RoleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRoleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRoleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRoleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRoleOK creates a RoleOK with default headers values
func NewRoleOK() *RoleOK {
	return &RoleOK{}
}

/* RoleOK describes a response with status code 200, with default header values.

Role
*/
type RoleOK struct {
	Payload *models.Role
}

func (o *RoleOK) Error() string {
	return fmt.Sprintf("[GET /roles/{role_id}][%d] roleOK  %+v", 200, o.Payload)
}
func (o *RoleOK) GetPayload() *models.Role {
	return o.Payload
}

func (o *RoleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Role)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRoleBadRequest creates a RoleBadRequest with default headers values
func NewRoleBadRequest() *RoleBadRequest {
	return &RoleBadRequest{}
}

/* RoleBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type RoleBadRequest struct {
	Payload *models.Error
}

func (o *RoleBadRequest) Error() string {
	return fmt.Sprintf("[GET /roles/{role_id}][%d] roleBadRequest  %+v", 400, o.Payload)
}
func (o *RoleBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *RoleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRoleNotFound creates a RoleNotFound with default headers values
func NewRoleNotFound() *RoleNotFound {
	return &RoleNotFound{}
}

/* RoleNotFound describes a response with status code 404, with default header values.

Not Found
*/
type RoleNotFound struct {
	Payload *models.Error
}

func (o *RoleNotFound) Error() string {
	return fmt.Sprintf("[GET /roles/{role_id}][%d] roleNotFound  %+v", 404, o.Payload)
}
func (o *RoleNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *RoleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
