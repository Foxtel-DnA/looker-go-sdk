// Code generated by go-swagger; DO NOT EDIT.

package look

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Foxtel-DnA/looker-go-sdk/models"
)

// RunLookReader is a Reader for the RunLook structure.
type RunLookReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RunLookReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRunLookOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRunLookBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRunLookNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewRunLookUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewRunLookTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRunLookOK creates a RunLookOK with default headers values
func NewRunLookOK() *RunLookOK {
	return &RunLookOK{}
}

/* RunLookOK describes a response with status code 200, with default header values.

Look
*/
type RunLookOK struct {
	Payload string
}

func (o *RunLookOK) Error() string {
	return fmt.Sprintf("[GET /looks/{look_id}/run/{result_format}][%d] runLookOK  %+v", 200, o.Payload)
}
func (o *RunLookOK) GetPayload() string {
	return o.Payload
}

func (o *RunLookOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRunLookBadRequest creates a RunLookBadRequest with default headers values
func NewRunLookBadRequest() *RunLookBadRequest {
	return &RunLookBadRequest{}
}

/* RunLookBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type RunLookBadRequest struct {
	Payload *models.Error
}

func (o *RunLookBadRequest) Error() string {
	return fmt.Sprintf("[GET /looks/{look_id}/run/{result_format}][%d] runLookBadRequest  %+v", 400, o.Payload)
}
func (o *RunLookBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *RunLookBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRunLookNotFound creates a RunLookNotFound with default headers values
func NewRunLookNotFound() *RunLookNotFound {
	return &RunLookNotFound{}
}

/* RunLookNotFound describes a response with status code 404, with default header values.

Not Found
*/
type RunLookNotFound struct {
	Payload *models.Error
}

func (o *RunLookNotFound) Error() string {
	return fmt.Sprintf("[GET /looks/{look_id}/run/{result_format}][%d] runLookNotFound  %+v", 404, o.Payload)
}
func (o *RunLookNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *RunLookNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRunLookUnprocessableEntity creates a RunLookUnprocessableEntity with default headers values
func NewRunLookUnprocessableEntity() *RunLookUnprocessableEntity {
	return &RunLookUnprocessableEntity{}
}

/* RunLookUnprocessableEntity describes a response with status code 422, with default header values.

Validation Error
*/
type RunLookUnprocessableEntity struct {
	Payload *models.ValidationError
}

func (o *RunLookUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /looks/{look_id}/run/{result_format}][%d] runLookUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *RunLookUnprocessableEntity) GetPayload() *models.ValidationError {
	return o.Payload
}

func (o *RunLookUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRunLookTooManyRequests creates a RunLookTooManyRequests with default headers values
func NewRunLookTooManyRequests() *RunLookTooManyRequests {
	return &RunLookTooManyRequests{}
}

/* RunLookTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type RunLookTooManyRequests struct {
	Payload *models.Error
}

func (o *RunLookTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /looks/{look_id}/run/{result_format}][%d] runLookTooManyRequests  %+v", 429, o.Payload)
}
func (o *RunLookTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *RunLookTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
