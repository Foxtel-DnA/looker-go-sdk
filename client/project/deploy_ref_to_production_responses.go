// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/billtrust/looker-go-sdk/models"
)

// DeployRefToProductionReader is a Reader for the DeployRefToProduction structure.
type DeployRefToProductionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeployRefToProductionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeployRefToProductionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewDeployRefToProductionNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeployRefToProductionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeployRefToProductionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewDeployRefToProductionUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeployRefToProductionTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeployRefToProductionOK creates a DeployRefToProductionOK with default headers values
func NewDeployRefToProductionOK() *DeployRefToProductionOK {
	return &DeployRefToProductionOK{}
}

/* DeployRefToProductionOK describes a response with status code 200, with default header values.

Project
*/
type DeployRefToProductionOK struct {
	Payload string
}

func (o *DeployRefToProductionOK) Error() string {
	return fmt.Sprintf("[POST /projects/{project_id}/deploy_ref_to_production][%d] deployRefToProductionOK  %+v", 200, o.Payload)
}
func (o *DeployRefToProductionOK) GetPayload() string {
	return o.Payload
}

func (o *DeployRefToProductionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeployRefToProductionNoContent creates a DeployRefToProductionNoContent with default headers values
func NewDeployRefToProductionNoContent() *DeployRefToProductionNoContent {
	return &DeployRefToProductionNoContent{}
}

/* DeployRefToProductionNoContent describes a response with status code 204, with default header values.

Returns 204 if project was successfully deployed to production, otherwise 400 with an error message
*/
type DeployRefToProductionNoContent struct {
}

func (o *DeployRefToProductionNoContent) Error() string {
	return fmt.Sprintf("[POST /projects/{project_id}/deploy_ref_to_production][%d] deployRefToProductionNoContent ", 204)
}

func (o *DeployRefToProductionNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeployRefToProductionBadRequest creates a DeployRefToProductionBadRequest with default headers values
func NewDeployRefToProductionBadRequest() *DeployRefToProductionBadRequest {
	return &DeployRefToProductionBadRequest{}
}

/* DeployRefToProductionBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeployRefToProductionBadRequest struct {
	Payload *models.Error
}

func (o *DeployRefToProductionBadRequest) Error() string {
	return fmt.Sprintf("[POST /projects/{project_id}/deploy_ref_to_production][%d] deployRefToProductionBadRequest  %+v", 400, o.Payload)
}
func (o *DeployRefToProductionBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeployRefToProductionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeployRefToProductionNotFound creates a DeployRefToProductionNotFound with default headers values
func NewDeployRefToProductionNotFound() *DeployRefToProductionNotFound {
	return &DeployRefToProductionNotFound{}
}

/* DeployRefToProductionNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeployRefToProductionNotFound struct {
	Payload *models.Error
}

func (o *DeployRefToProductionNotFound) Error() string {
	return fmt.Sprintf("[POST /projects/{project_id}/deploy_ref_to_production][%d] deployRefToProductionNotFound  %+v", 404, o.Payload)
}
func (o *DeployRefToProductionNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeployRefToProductionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeployRefToProductionUnprocessableEntity creates a DeployRefToProductionUnprocessableEntity with default headers values
func NewDeployRefToProductionUnprocessableEntity() *DeployRefToProductionUnprocessableEntity {
	return &DeployRefToProductionUnprocessableEntity{}
}

/* DeployRefToProductionUnprocessableEntity describes a response with status code 422, with default header values.

Validation Error
*/
type DeployRefToProductionUnprocessableEntity struct {
	Payload *models.ValidationError
}

func (o *DeployRefToProductionUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /projects/{project_id}/deploy_ref_to_production][%d] deployRefToProductionUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *DeployRefToProductionUnprocessableEntity) GetPayload() *models.ValidationError {
	return o.Payload
}

func (o *DeployRefToProductionUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeployRefToProductionTooManyRequests creates a DeployRefToProductionTooManyRequests with default headers values
func NewDeployRefToProductionTooManyRequests() *DeployRefToProductionTooManyRequests {
	return &DeployRefToProductionTooManyRequests{}
}

/* DeployRefToProductionTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type DeployRefToProductionTooManyRequests struct {
	Payload *models.Error
}

func (o *DeployRefToProductionTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /projects/{project_id}/deploy_ref_to_production][%d] deployRefToProductionTooManyRequests  %+v", 429, o.Payload)
}
func (o *DeployRefToProductionTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeployRefToProductionTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
